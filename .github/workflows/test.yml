name: Code Coverage

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: extractions/setup-just@v2 # Updated action version
        with:
          just-version: 1.5.0 # optional semver specification, otherwise latest
      - uses: actions/checkout@v4 # Updated action version

      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT # Updated output syntax
        id: nvm # Keep id for compatibility with setup-node

      - uses: actions/setup-node@v4 # Updated action version
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
          cache: "npm" # This handles npm caching internally

      # Removed redundant actions/cache step for node_modules

      - run: npm ci # Use npm ci for faster, more reliable installs
      - run: npm run test:unit
      - run: just test-integration-ci

      - name: Produce the coverage report
        uses: insightsengineering/coverage-action@v2
        with:
          # Path to the Cobertura XML report.
          path: ./coverage/cobertura-coverage.xml
          # Minimum total coverage, if you want to the
          # workflow to enforce it as a standard.
          # This has no effect if the `fail` arg is set to `false`.
          threshold: 10
          # Fail the workflow if the minimum code coverage
          # reuqirements are not satisfied.
          fail: true
          # Publish the rendered output as a PR comment
          publish: true
          # Create a coverage diff report.
          diff: true
          # Branch to diff against.
          # Compare the current coverage to the coverage
          # determined on this branch.
          diff-branch: main
          # This is where the coverage reports for the
          # `diff-branch` are stored.
          # Branch is created if it doesn't already exist'.
          diff-storage: _xml_coverage_reports
