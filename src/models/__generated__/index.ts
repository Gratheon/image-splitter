/**
 * !!! This file is autogenerated do not edit by hand !!!
 *
 * Generated by: @databases/pg-schema-print-types
 * Checksum: c9BjGL6WY41p4CsCzDOKzA4oNKmYMlp7TvB7VDw+f5oaEsWpE9WIsob0oI7uLiDDaw5bb1ie08UknxDwrjoBPA==
 */

/* eslint-disable */
// tslint:disable

import DbMigrations, {DbMigrations_InsertParameters} from './_db_migrations'
import Files, {Files_InsertParameters} from './files'
import FilesFrameSideRel, {FilesFrameSideRel_InsertParameters} from './files_frame_side_rel'
import FilesHiveRel, {FilesHiveRel_InsertParameters} from './files_hive_rel'

interface DatabaseSchema {
  _db_migrations: {record: DbMigrations, insert: DbMigrations_InsertParameters};
  files: {record: Files, insert: Files_InsertParameters};
  files_frame_side_rel: {record: FilesFrameSideRel, insert: FilesFrameSideRel_InsertParameters};
  files_hive_rel: {record: FilesHiveRel, insert: FilesHiveRel_InsertParameters};
}
export default DatabaseSchema;

/**
 * JSON serialize values (v) if the table name (t) and column name (c)
 * is a JSON column.
 * This is necessary if you want to store values that are not plain objects
 * in a JSON column.
 */
function serializeValue(t: string, c: string, v: unknown): unknown {
  if (t === "files_frame_side_rel" && (c === "detectedBees" || c === "strokeHistory")) {
    return JSON.stringify(v);
  }
  return v;
}
export {serializeValue}
